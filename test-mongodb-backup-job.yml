apiVersion: batch/v1 
kind: Job
metadata:
  annotations:
    cronjob.kubernetes.io/instantiate: manual
  creationTimestamp: null
  name: test-mongodb-backup
spec:
  template:
    metadata:
      creationTimestamp: null
    spec:
      containers:
      - command:
        - bash
        - -c
        - ls -rdt /var/lib/mongodb-backup/dump-* | head -n -$MONGODB_BACKUP_KEEP |
          xargs rm -rf && DIR=/var/lib/mongodb-backup/dump-`date +%F-%T` && mongodump
          -j 1 -u admin -p $MONGODB_ADMIN_PASSWORD --host $MONGODB_SERVICE_HOST --port
          $MONGODB_SERVICE_PORT --authenticationDatabase=admin --gzip --out=$DIR &&
          echo && echo "To restore, use:" && echo "~# mongorestore -u admin -p \$MONGODB_ADMIN_PASSWORD
          --authenticationDatabase admin --gzip $DIR/DB_TO_RESTORE -d DB_TO_RESTORE_INTO"
        env:
        - name: MONGODB_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-admin-password
              name: mongodb
        - name: MONGODB_BACKUP_KEEP
          value: "3"
        image: docker-registry.default.svc:5000/openshift/mongodb@sha256:ee70413940eba29389647bb352bcf5041da973de137f260ac3f95745d714a077
        imagePullPolicy: IfNotPresent
        name: mongodb-backup
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/mongodb-backup
          name: mongodb-backups
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mongodb-backups
        persistentVolumeClaim:
          claimName: mongodb-backups
status: {}
